<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.liluyang.mybatis.generator.UserMapper">
  <resultMap id="BaseResultMap" type="me.liluyang.mybatis.generator.User">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="mphone" jdbcType="VARCHAR" property="mphone" />
    <result column="update_at" jdbcType="TIMESTAMP" property="updateAt" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="client_id" jdbcType="VARCHAR" property="clientId" />
    <result column="enabled" jdbcType="BIT" property="enabled" />
    <result column="firstname" jdbcType="VARCHAR" property="firstname" />
    <result column="lastpasswordresetdate" jdbcType="TIMESTAMP" property="lastpasswordresetdate" />
    <result column="lastname" jdbcType="VARCHAR" property="lastname" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_at, email, mphone, update_at, user_id, username, client_id, enabled, firstname, 
    lastpasswordresetdate, lastname, password, phone
  </sql>
  <select id="selectByExample" parameterType="me.liluyang.mybatis.generator.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="me.liluyang.mybatis.generator.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="me.liluyang.mybatis.generator.User">
    insert into user (id, create_at, email, 
      mphone, update_at, user_id, 
      username, client_id, enabled, 
      firstname, lastpasswordresetdate, lastname, 
      password, phone)
    values (#{id,jdbcType=VARCHAR}, #{createAt,jdbcType=TIMESTAMP}, #{email,jdbcType=VARCHAR}, 
      #{mphone,jdbcType=VARCHAR}, #{updateAt,jdbcType=TIMESTAMP}, #{userId,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{clientId,jdbcType=VARCHAR}, #{enabled,jdbcType=BIT}, 
      #{firstname,jdbcType=VARCHAR}, #{lastpasswordresetdate,jdbcType=TIMESTAMP}, #{lastname,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="me.liluyang.mybatis.generator.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="mphone != null">
        mphone,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="clientId != null">
        client_id,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="firstname != null">
        firstname,
      </if>
      <if test="lastpasswordresetdate != null">
        lastpasswordresetdate,
      </if>
      <if test="lastname != null">
        lastname,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="phone != null">
        phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mphone != null">
        #{mphone,jdbcType=VARCHAR},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="clientId != null">
        #{clientId,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=BIT},
      </if>
      <if test="firstname != null">
        #{firstname,jdbcType=VARCHAR},
      </if>
      <if test="lastpasswordresetdate != null">
        #{lastpasswordresetdate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastname != null">
        #{lastname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="me.liluyang.mybatis.generator.UserExample" resultType="java.lang.Integer">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.createAt != null">
        create_at = #{record.createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.mphone != null">
        mphone = #{record.mphone,jdbcType=VARCHAR},
      </if>
      <if test="record.updateAt != null">
        update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.clientId != null">
        client_id = #{record.clientId,jdbcType=VARCHAR},
      </if>
      <if test="record.enabled != null">
        enabled = #{record.enabled,jdbcType=BIT},
      </if>
      <if test="record.firstname != null">
        firstname = #{record.firstname,jdbcType=VARCHAR},
      </if>
      <if test="record.lastpasswordresetdate != null">
        lastpasswordresetdate = #{record.lastpasswordresetdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastname != null">
        lastname = #{record.lastname,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=VARCHAR},
      create_at = #{record.createAt,jdbcType=TIMESTAMP},
      email = #{record.email,jdbcType=VARCHAR},
      mphone = #{record.mphone,jdbcType=VARCHAR},
      update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      client_id = #{record.clientId,jdbcType=VARCHAR},
      enabled = #{record.enabled,jdbcType=BIT},
      firstname = #{record.firstname,jdbcType=VARCHAR},
      lastpasswordresetdate = #{record.lastpasswordresetdate,jdbcType=TIMESTAMP},
      lastname = #{record.lastname,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="me.liluyang.mybatis.generator.User">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="update_at" jdbcType="TIMESTAMP" property="updateAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_at, name, update_at
  </sql>
  <select id="selectByExample" parameterType="me.liluyang.mybatis.generator.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="me.liluyang.mybatis.generator.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="me.liluyang.mybatis.generator.User">
    insert into user (id, create_at, name, 
      update_at)
    values (#{id,jdbcType=VARCHAR}, #{createAt,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR}, 
      #{updateAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="me.liluyang.mybatis.generator.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="me.liluyang.mybatis.generator.UserExample" resultType="java.lang.Integer">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.createAt != null">
        create_at = #{record.createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.updateAt != null">
        update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=VARCHAR},
      create_at = #{record.createAt,jdbcType=TIMESTAMP},
      name = #{record.name,jdbcType=VARCHAR},
      update_at = #{record.updateAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="me.liluyang.mybatis.generator.User">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="balance" jdbcType="INTEGER" property="balance" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, email, password, username, balance
  </sql>
  <select id="selectByExample" parameterType="me.liluyang.mybatis.generator.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="me.liluyang.mybatis.generator.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="me.liluyang.mybatis.generator.User">
    insert into user (id, email, password, 
      username, balance)
    values (#{id,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{balance,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="me.liluyang.mybatis.generator.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="balance != null">
        balance,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="me.liluyang.mybatis.generator.UserExample" resultType="java.lang.Integer">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.balance != null">
        balance = #{record.balance,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      balance = #{record.balance,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="me.liluyang.mybatis.generator.User">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="enabled" jdbcType="BIT" property="enabled" />
    <result column="last_password_reset_date" jdbcType="TIMESTAMP" property="lastPasswordResetDate" />
    <result column="mphone" jdbcType="VARCHAR" property="mphone" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="update_at" jdbcType="TIMESTAMP" property="updateAt" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_at, email, enabled, last_password_reset_date, mphone, password, update_at, 
    user_id, username
  </sql>
  <select id="selectByExample" parameterType="me.liluyang.mybatis.generator.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="me.liluyang.mybatis.generator.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="me.liluyang.mybatis.generator.User">
    insert into user (id, create_at, email, 
      enabled, last_password_reset_date, mphone, 
      password, update_at, user_id, 
      username)
    values (#{id,jdbcType=VARCHAR}, #{createAt,jdbcType=TIMESTAMP}, #{email,jdbcType=VARCHAR}, 
      #{enabled,jdbcType=BIT}, #{lastPasswordResetDate,jdbcType=TIMESTAMP}, #{mphone,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{updateAt,jdbcType=TIMESTAMP}, #{userId,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="me.liluyang.mybatis.generator.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="lastPasswordResetDate != null">
        last_password_reset_date,
      </if>
      <if test="mphone != null">
        mphone,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="username != null">
        username,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=BIT},
      </if>
      <if test="lastPasswordResetDate != null">
        #{lastPasswordResetDate,jdbcType=TIMESTAMP},
      </if>
      <if test="mphone != null">
        #{mphone,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="me.liluyang.mybatis.generator.UserExample" resultType="java.lang.Integer">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.createAt != null">
        create_at = #{record.createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.enabled != null">
        enabled = #{record.enabled,jdbcType=BIT},
      </if>
      <if test="record.lastPasswordResetDate != null">
        last_password_reset_date = #{record.lastPasswordResetDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mphone != null">
        mphone = #{record.mphone,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.updateAt != null">
        update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=VARCHAR},
      create_at = #{record.createAt,jdbcType=TIMESTAMP},
      email = #{record.email,jdbcType=VARCHAR},
      enabled = #{record.enabled,jdbcType=BIT},
      last_password_reset_date = #{record.lastPasswordResetDate,jdbcType=TIMESTAMP},
      mphone = #{record.mphone,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="me.liluyang.mybatis.generator.User">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, gender, username, password
  </sql>
  <select id="selectByExample" parameterType="me.liluyang.mybatis.generator.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="me.liluyang.mybatis.generator.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="me.liluyang.mybatis.generator.User">
    insert into user (id, name, gender, 
      username, password)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="me.liluyang.mybatis.generator.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="me.liluyang.mybatis.generator.UserExample" resultType="java.lang.Integer">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="me.liluyang.mybatis.generator.User">
    <result column="Host" jdbcType="CHAR" property="host" />
    <result column="User" jdbcType="CHAR" property="user" />
    <result column="Select_priv" jdbcType="CHAR" property="selectPriv" />
    <result column="Insert_priv" jdbcType="CHAR" property="insertPriv" />
    <result column="Update_priv" jdbcType="CHAR" property="updatePriv" />
    <result column="Delete_priv" jdbcType="CHAR" property="deletePriv" />
    <result column="Create_priv" jdbcType="CHAR" property="createPriv" />
    <result column="Drop_priv" jdbcType="CHAR" property="dropPriv" />
    <result column="Reload_priv" jdbcType="CHAR" property="reloadPriv" />
    <result column="Shutdown_priv" jdbcType="CHAR" property="shutdownPriv" />
    <result column="Process_priv" jdbcType="CHAR" property="processPriv" />
    <result column="File_priv" jdbcType="CHAR" property="filePriv" />
    <result column="Grant_priv" jdbcType="CHAR" property="grantPriv" />
    <result column="References_priv" jdbcType="CHAR" property="referencesPriv" />
    <result column="Index_priv" jdbcType="CHAR" property="indexPriv" />
    <result column="Alter_priv" jdbcType="CHAR" property="alterPriv" />
    <result column="Show_db_priv" jdbcType="CHAR" property="showDbPriv" />
    <result column="Super_priv" jdbcType="CHAR" property="superPriv" />
    <result column="Create_tmp_table_priv" jdbcType="CHAR" property="createTmpTablePriv" />
    <result column="Lock_tables_priv" jdbcType="CHAR" property="lockTablesPriv" />
    <result column="Execute_priv" jdbcType="CHAR" property="executePriv" />
    <result column="Repl_slave_priv" jdbcType="CHAR" property="replSlavePriv" />
    <result column="Repl_client_priv" jdbcType="CHAR" property="replClientPriv" />
    <result column="Create_view_priv" jdbcType="CHAR" property="createViewPriv" />
    <result column="Show_view_priv" jdbcType="CHAR" property="showViewPriv" />
    <result column="Create_routine_priv" jdbcType="CHAR" property="createRoutinePriv" />
    <result column="Alter_routine_priv" jdbcType="CHAR" property="alterRoutinePriv" />
    <result column="Create_user_priv" jdbcType="CHAR" property="createUserPriv" />
    <result column="Event_priv" jdbcType="CHAR" property="eventPriv" />
    <result column="Trigger_priv" jdbcType="CHAR" property="triggerPriv" />
    <result column="Create_tablespace_priv" jdbcType="CHAR" property="createTablespacePriv" />
    <result column="ssl_type" jdbcType="CHAR" property="sslType" />
    <result column="max_questions" jdbcType="INTEGER" property="maxQuestions" />
    <result column="max_updates" jdbcType="INTEGER" property="maxUpdates" />
    <result column="max_connections" jdbcType="INTEGER" property="maxConnections" />
    <result column="max_user_connections" jdbcType="INTEGER" property="maxUserConnections" />
    <result column="plugin" jdbcType="CHAR" property="plugin" />
    <result column="password_expired" jdbcType="CHAR" property="passwordExpired" />
    <result column="password_last_changed" jdbcType="TIMESTAMP" property="passwordLastChanged" />
    <result column="password_lifetime" jdbcType="SMALLINT" property="passwordLifetime" />
    <result column="account_locked" jdbcType="CHAR" property="accountLocked" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="me.liluyang.mybatis.generator.UserWithBLOBs">
    <result column="ssl_cipher" jdbcType="LONGVARBINARY" property="sslCipher" />
    <result column="x509_issuer" jdbcType="LONGVARBINARY" property="x509Issuer" />
    <result column="x509_subject" jdbcType="LONGVARBINARY" property="x509Subject" />
    <result column="authentication_string" jdbcType="LONGVARCHAR" property="authenticationString" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Host, User, Select_priv, Insert_priv, Update_priv, Delete_priv, Create_priv, Drop_priv, 
    Reload_priv, Shutdown_priv, Process_priv, File_priv, Grant_priv, References_priv, 
    Index_priv, Alter_priv, Show_db_priv, Super_priv, Create_tmp_table_priv, Lock_tables_priv, 
    Execute_priv, Repl_slave_priv, Repl_client_priv, Create_view_priv, Show_view_priv, 
    Create_routine_priv, Alter_routine_priv, Create_user_priv, Event_priv, Trigger_priv, 
    Create_tablespace_priv, ssl_type, max_questions, max_updates, max_connections, max_user_connections, 
    plugin, password_expired, password_last_changed, password_lifetime, account_locked
  </sql>
  <sql id="Blob_Column_List">
    ssl_cipher, x509_issuer, x509_subject, authentication_string
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="me.liluyang.mybatis.generator.UserExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="me.liluyang.mybatis.generator.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="me.liluyang.mybatis.generator.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="me.liluyang.mybatis.generator.UserWithBLOBs">
    insert into user (Host, User, Select_priv, 
      Insert_priv, Update_priv, Delete_priv, 
      Create_priv, Drop_priv, Reload_priv, 
      Shutdown_priv, Process_priv, File_priv, 
      Grant_priv, References_priv, Index_priv, 
      Alter_priv, Show_db_priv, Super_priv, 
      Create_tmp_table_priv, Lock_tables_priv, Execute_priv, 
      Repl_slave_priv, Repl_client_priv, Create_view_priv, 
      Show_view_priv, Create_routine_priv, Alter_routine_priv, 
      Create_user_priv, Event_priv, Trigger_priv, 
      Create_tablespace_priv, ssl_type, max_questions, 
      max_updates, max_connections, max_user_connections, 
      plugin, password_expired, password_last_changed, 
      password_lifetime, account_locked, ssl_cipher, 
      x509_issuer, x509_subject, authentication_string
      )
    values (#{host,jdbcType=CHAR}, #{user,jdbcType=CHAR}, #{selectPriv,jdbcType=CHAR}, 
      #{insertPriv,jdbcType=CHAR}, #{updatePriv,jdbcType=CHAR}, #{deletePriv,jdbcType=CHAR}, 
      #{createPriv,jdbcType=CHAR}, #{dropPriv,jdbcType=CHAR}, #{reloadPriv,jdbcType=CHAR}, 
      #{shutdownPriv,jdbcType=CHAR}, #{processPriv,jdbcType=CHAR}, #{filePriv,jdbcType=CHAR}, 
      #{grantPriv,jdbcType=CHAR}, #{referencesPriv,jdbcType=CHAR}, #{indexPriv,jdbcType=CHAR}, 
      #{alterPriv,jdbcType=CHAR}, #{showDbPriv,jdbcType=CHAR}, #{superPriv,jdbcType=CHAR}, 
      #{createTmpTablePriv,jdbcType=CHAR}, #{lockTablesPriv,jdbcType=CHAR}, #{executePriv,jdbcType=CHAR}, 
      #{replSlavePriv,jdbcType=CHAR}, #{replClientPriv,jdbcType=CHAR}, #{createViewPriv,jdbcType=CHAR}, 
      #{showViewPriv,jdbcType=CHAR}, #{createRoutinePriv,jdbcType=CHAR}, #{alterRoutinePriv,jdbcType=CHAR}, 
      #{createUserPriv,jdbcType=CHAR}, #{eventPriv,jdbcType=CHAR}, #{triggerPriv,jdbcType=CHAR}, 
      #{createTablespacePriv,jdbcType=CHAR}, #{sslType,jdbcType=CHAR}, #{maxQuestions,jdbcType=INTEGER}, 
      #{maxUpdates,jdbcType=INTEGER}, #{maxConnections,jdbcType=INTEGER}, #{maxUserConnections,jdbcType=INTEGER}, 
      #{plugin,jdbcType=CHAR}, #{passwordExpired,jdbcType=CHAR}, #{passwordLastChanged,jdbcType=TIMESTAMP}, 
      #{passwordLifetime,jdbcType=SMALLINT}, #{accountLocked,jdbcType=CHAR}, #{sslCipher,jdbcType=LONGVARBINARY}, 
      #{x509Issuer,jdbcType=LONGVARBINARY}, #{x509Subject,jdbcType=LONGVARBINARY}, #{authenticationString,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="me.liluyang.mybatis.generator.UserWithBLOBs">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="host != null">
        Host,
      </if>
      <if test="user != null">
        User,
      </if>
      <if test="selectPriv != null">
        Select_priv,
      </if>
      <if test="insertPriv != null">
        Insert_priv,
      </if>
      <if test="updatePriv != null">
        Update_priv,
      </if>
      <if test="deletePriv != null">
        Delete_priv,
      </if>
      <if test="createPriv != null">
        Create_priv,
      </if>
      <if test="dropPriv != null">
        Drop_priv,
      </if>
      <if test="reloadPriv != null">
        Reload_priv,
      </if>
      <if test="shutdownPriv != null">
        Shutdown_priv,
      </if>
      <if test="processPriv != null">
        Process_priv,
      </if>
      <if test="filePriv != null">
        File_priv,
      </if>
      <if test="grantPriv != null">
        Grant_priv,
      </if>
      <if test="referencesPriv != null">
        References_priv,
      </if>
      <if test="indexPriv != null">
        Index_priv,
      </if>
      <if test="alterPriv != null">
        Alter_priv,
      </if>
      <if test="showDbPriv != null">
        Show_db_priv,
      </if>
      <if test="superPriv != null">
        Super_priv,
      </if>
      <if test="createTmpTablePriv != null">
        Create_tmp_table_priv,
      </if>
      <if test="lockTablesPriv != null">
        Lock_tables_priv,
      </if>
      <if test="executePriv != null">
        Execute_priv,
      </if>
      <if test="replSlavePriv != null">
        Repl_slave_priv,
      </if>
      <if test="replClientPriv != null">
        Repl_client_priv,
      </if>
      <if test="createViewPriv != null">
        Create_view_priv,
      </if>
      <if test="showViewPriv != null">
        Show_view_priv,
      </if>
      <if test="createRoutinePriv != null">
        Create_routine_priv,
      </if>
      <if test="alterRoutinePriv != null">
        Alter_routine_priv,
      </if>
      <if test="createUserPriv != null">
        Create_user_priv,
      </if>
      <if test="eventPriv != null">
        Event_priv,
      </if>
      <if test="triggerPriv != null">
        Trigger_priv,
      </if>
      <if test="createTablespacePriv != null">
        Create_tablespace_priv,
      </if>
      <if test="sslType != null">
        ssl_type,
      </if>
      <if test="maxQuestions != null">
        max_questions,
      </if>
      <if test="maxUpdates != null">
        max_updates,
      </if>
      <if test="maxConnections != null">
        max_connections,
      </if>
      <if test="maxUserConnections != null">
        max_user_connections,
      </if>
      <if test="plugin != null">
        plugin,
      </if>
      <if test="passwordExpired != null">
        password_expired,
      </if>
      <if test="passwordLastChanged != null">
        password_last_changed,
      </if>
      <if test="passwordLifetime != null">
        password_lifetime,
      </if>
      <if test="accountLocked != null">
        account_locked,
      </if>
      <if test="sslCipher != null">
        ssl_cipher,
      </if>
      <if test="x509Issuer != null">
        x509_issuer,
      </if>
      <if test="x509Subject != null">
        x509_subject,
      </if>
      <if test="authenticationString != null">
        authentication_string,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="host != null">
        #{host,jdbcType=CHAR},
      </if>
      <if test="user != null">
        #{user,jdbcType=CHAR},
      </if>
      <if test="selectPriv != null">
        #{selectPriv,jdbcType=CHAR},
      </if>
      <if test="insertPriv != null">
        #{insertPriv,jdbcType=CHAR},
      </if>
      <if test="updatePriv != null">
        #{updatePriv,jdbcType=CHAR},
      </if>
      <if test="deletePriv != null">
        #{deletePriv,jdbcType=CHAR},
      </if>
      <if test="createPriv != null">
        #{createPriv,jdbcType=CHAR},
      </if>
      <if test="dropPriv != null">
        #{dropPriv,jdbcType=CHAR},
      </if>
      <if test="reloadPriv != null">
        #{reloadPriv,jdbcType=CHAR},
      </if>
      <if test="shutdownPriv != null">
        #{shutdownPriv,jdbcType=CHAR},
      </if>
      <if test="processPriv != null">
        #{processPriv,jdbcType=CHAR},
      </if>
      <if test="filePriv != null">
        #{filePriv,jdbcType=CHAR},
      </if>
      <if test="grantPriv != null">
        #{grantPriv,jdbcType=CHAR},
      </if>
      <if test="referencesPriv != null">
        #{referencesPriv,jdbcType=CHAR},
      </if>
      <if test="indexPriv != null">
        #{indexPriv,jdbcType=CHAR},
      </if>
      <if test="alterPriv != null">
        #{alterPriv,jdbcType=CHAR},
      </if>
      <if test="showDbPriv != null">
        #{showDbPriv,jdbcType=CHAR},
      </if>
      <if test="superPriv != null">
        #{superPriv,jdbcType=CHAR},
      </if>
      <if test="createTmpTablePriv != null">
        #{createTmpTablePriv,jdbcType=CHAR},
      </if>
      <if test="lockTablesPriv != null">
        #{lockTablesPriv,jdbcType=CHAR},
      </if>
      <if test="executePriv != null">
        #{executePriv,jdbcType=CHAR},
      </if>
      <if test="replSlavePriv != null">
        #{replSlavePriv,jdbcType=CHAR},
      </if>
      <if test="replClientPriv != null">
        #{replClientPriv,jdbcType=CHAR},
      </if>
      <if test="createViewPriv != null">
        #{createViewPriv,jdbcType=CHAR},
      </if>
      <if test="showViewPriv != null">
        #{showViewPriv,jdbcType=CHAR},
      </if>
      <if test="createRoutinePriv != null">
        #{createRoutinePriv,jdbcType=CHAR},
      </if>
      <if test="alterRoutinePriv != null">
        #{alterRoutinePriv,jdbcType=CHAR},
      </if>
      <if test="createUserPriv != null">
        #{createUserPriv,jdbcType=CHAR},
      </if>
      <if test="eventPriv != null">
        #{eventPriv,jdbcType=CHAR},
      </if>
      <if test="triggerPriv != null">
        #{triggerPriv,jdbcType=CHAR},
      </if>
      <if test="createTablespacePriv != null">
        #{createTablespacePriv,jdbcType=CHAR},
      </if>
      <if test="sslType != null">
        #{sslType,jdbcType=CHAR},
      </if>
      <if test="maxQuestions != null">
        #{maxQuestions,jdbcType=INTEGER},
      </if>
      <if test="maxUpdates != null">
        #{maxUpdates,jdbcType=INTEGER},
      </if>
      <if test="maxConnections != null">
        #{maxConnections,jdbcType=INTEGER},
      </if>
      <if test="maxUserConnections != null">
        #{maxUserConnections,jdbcType=INTEGER},
      </if>
      <if test="plugin != null">
        #{plugin,jdbcType=CHAR},
      </if>
      <if test="passwordExpired != null">
        #{passwordExpired,jdbcType=CHAR},
      </if>
      <if test="passwordLastChanged != null">
        #{passwordLastChanged,jdbcType=TIMESTAMP},
      </if>
      <if test="passwordLifetime != null">
        #{passwordLifetime,jdbcType=SMALLINT},
      </if>
      <if test="accountLocked != null">
        #{accountLocked,jdbcType=CHAR},
      </if>
      <if test="sslCipher != null">
        #{sslCipher,jdbcType=LONGVARBINARY},
      </if>
      <if test="x509Issuer != null">
        #{x509Issuer,jdbcType=LONGVARBINARY},
      </if>
      <if test="x509Subject != null">
        #{x509Subject,jdbcType=LONGVARBINARY},
      </if>
      <if test="authenticationString != null">
        #{authenticationString,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="me.liluyang.mybatis.generator.UserExample" resultType="java.lang.Integer">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.host != null">
        Host = #{record.host,jdbcType=CHAR},
      </if>
      <if test="record.user != null">
        User = #{record.user,jdbcType=CHAR},
      </if>
      <if test="record.selectPriv != null">
        Select_priv = #{record.selectPriv,jdbcType=CHAR},
      </if>
      <if test="record.insertPriv != null">
        Insert_priv = #{record.insertPriv,jdbcType=CHAR},
      </if>
      <if test="record.updatePriv != null">
        Update_priv = #{record.updatePriv,jdbcType=CHAR},
      </if>
      <if test="record.deletePriv != null">
        Delete_priv = #{record.deletePriv,jdbcType=CHAR},
      </if>
      <if test="record.createPriv != null">
        Create_priv = #{record.createPriv,jdbcType=CHAR},
      </if>
      <if test="record.dropPriv != null">
        Drop_priv = #{record.dropPriv,jdbcType=CHAR},
      </if>
      <if test="record.reloadPriv != null">
        Reload_priv = #{record.reloadPriv,jdbcType=CHAR},
      </if>
      <if test="record.shutdownPriv != null">
        Shutdown_priv = #{record.shutdownPriv,jdbcType=CHAR},
      </if>
      <if test="record.processPriv != null">
        Process_priv = #{record.processPriv,jdbcType=CHAR},
      </if>
      <if test="record.filePriv != null">
        File_priv = #{record.filePriv,jdbcType=CHAR},
      </if>
      <if test="record.grantPriv != null">
        Grant_priv = #{record.grantPriv,jdbcType=CHAR},
      </if>
      <if test="record.referencesPriv != null">
        References_priv = #{record.referencesPriv,jdbcType=CHAR},
      </if>
      <if test="record.indexPriv != null">
        Index_priv = #{record.indexPriv,jdbcType=CHAR},
      </if>
      <if test="record.alterPriv != null">
        Alter_priv = #{record.alterPriv,jdbcType=CHAR},
      </if>
      <if test="record.showDbPriv != null">
        Show_db_priv = #{record.showDbPriv,jdbcType=CHAR},
      </if>
      <if test="record.superPriv != null">
        Super_priv = #{record.superPriv,jdbcType=CHAR},
      </if>
      <if test="record.createTmpTablePriv != null">
        Create_tmp_table_priv = #{record.createTmpTablePriv,jdbcType=CHAR},
      </if>
      <if test="record.lockTablesPriv != null">
        Lock_tables_priv = #{record.lockTablesPriv,jdbcType=CHAR},
      </if>
      <if test="record.executePriv != null">
        Execute_priv = #{record.executePriv,jdbcType=CHAR},
      </if>
      <if test="record.replSlavePriv != null">
        Repl_slave_priv = #{record.replSlavePriv,jdbcType=CHAR},
      </if>
      <if test="record.replClientPriv != null">
        Repl_client_priv = #{record.replClientPriv,jdbcType=CHAR},
      </if>
      <if test="record.createViewPriv != null">
        Create_view_priv = #{record.createViewPriv,jdbcType=CHAR},
      </if>
      <if test="record.showViewPriv != null">
        Show_view_priv = #{record.showViewPriv,jdbcType=CHAR},
      </if>
      <if test="record.createRoutinePriv != null">
        Create_routine_priv = #{record.createRoutinePriv,jdbcType=CHAR},
      </if>
      <if test="record.alterRoutinePriv != null">
        Alter_routine_priv = #{record.alterRoutinePriv,jdbcType=CHAR},
      </if>
      <if test="record.createUserPriv != null">
        Create_user_priv = #{record.createUserPriv,jdbcType=CHAR},
      </if>
      <if test="record.eventPriv != null">
        Event_priv = #{record.eventPriv,jdbcType=CHAR},
      </if>
      <if test="record.triggerPriv != null">
        Trigger_priv = #{record.triggerPriv,jdbcType=CHAR},
      </if>
      <if test="record.createTablespacePriv != null">
        Create_tablespace_priv = #{record.createTablespacePriv,jdbcType=CHAR},
      </if>
      <if test="record.sslType != null">
        ssl_type = #{record.sslType,jdbcType=CHAR},
      </if>
      <if test="record.maxQuestions != null">
        max_questions = #{record.maxQuestions,jdbcType=INTEGER},
      </if>
      <if test="record.maxUpdates != null">
        max_updates = #{record.maxUpdates,jdbcType=INTEGER},
      </if>
      <if test="record.maxConnections != null">
        max_connections = #{record.maxConnections,jdbcType=INTEGER},
      </if>
      <if test="record.maxUserConnections != null">
        max_user_connections = #{record.maxUserConnections,jdbcType=INTEGER},
      </if>
      <if test="record.plugin != null">
        plugin = #{record.plugin,jdbcType=CHAR},
      </if>
      <if test="record.passwordExpired != null">
        password_expired = #{record.passwordExpired,jdbcType=CHAR},
      </if>
      <if test="record.passwordLastChanged != null">
        password_last_changed = #{record.passwordLastChanged,jdbcType=TIMESTAMP},
      </if>
      <if test="record.passwordLifetime != null">
        password_lifetime = #{record.passwordLifetime,jdbcType=SMALLINT},
      </if>
      <if test="record.accountLocked != null">
        account_locked = #{record.accountLocked,jdbcType=CHAR},
      </if>
      <if test="record.sslCipher != null">
        ssl_cipher = #{record.sslCipher,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.x509Issuer != null">
        x509_issuer = #{record.x509Issuer,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.x509Subject != null">
        x509_subject = #{record.x509Subject,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.authenticationString != null">
        authentication_string = #{record.authenticationString,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update user
    set Host = #{record.host,jdbcType=CHAR},
      User = #{record.user,jdbcType=CHAR},
      Select_priv = #{record.selectPriv,jdbcType=CHAR},
      Insert_priv = #{record.insertPriv,jdbcType=CHAR},
      Update_priv = #{record.updatePriv,jdbcType=CHAR},
      Delete_priv = #{record.deletePriv,jdbcType=CHAR},
      Create_priv = #{record.createPriv,jdbcType=CHAR},
      Drop_priv = #{record.dropPriv,jdbcType=CHAR},
      Reload_priv = #{record.reloadPriv,jdbcType=CHAR},
      Shutdown_priv = #{record.shutdownPriv,jdbcType=CHAR},
      Process_priv = #{record.processPriv,jdbcType=CHAR},
      File_priv = #{record.filePriv,jdbcType=CHAR},
      Grant_priv = #{record.grantPriv,jdbcType=CHAR},
      References_priv = #{record.referencesPriv,jdbcType=CHAR},
      Index_priv = #{record.indexPriv,jdbcType=CHAR},
      Alter_priv = #{record.alterPriv,jdbcType=CHAR},
      Show_db_priv = #{record.showDbPriv,jdbcType=CHAR},
      Super_priv = #{record.superPriv,jdbcType=CHAR},
      Create_tmp_table_priv = #{record.createTmpTablePriv,jdbcType=CHAR},
      Lock_tables_priv = #{record.lockTablesPriv,jdbcType=CHAR},
      Execute_priv = #{record.executePriv,jdbcType=CHAR},
      Repl_slave_priv = #{record.replSlavePriv,jdbcType=CHAR},
      Repl_client_priv = #{record.replClientPriv,jdbcType=CHAR},
      Create_view_priv = #{record.createViewPriv,jdbcType=CHAR},
      Show_view_priv = #{record.showViewPriv,jdbcType=CHAR},
      Create_routine_priv = #{record.createRoutinePriv,jdbcType=CHAR},
      Alter_routine_priv = #{record.alterRoutinePriv,jdbcType=CHAR},
      Create_user_priv = #{record.createUserPriv,jdbcType=CHAR},
      Event_priv = #{record.eventPriv,jdbcType=CHAR},
      Trigger_priv = #{record.triggerPriv,jdbcType=CHAR},
      Create_tablespace_priv = #{record.createTablespacePriv,jdbcType=CHAR},
      ssl_type = #{record.sslType,jdbcType=CHAR},
      max_questions = #{record.maxQuestions,jdbcType=INTEGER},
      max_updates = #{record.maxUpdates,jdbcType=INTEGER},
      max_connections = #{record.maxConnections,jdbcType=INTEGER},
      max_user_connections = #{record.maxUserConnections,jdbcType=INTEGER},
      plugin = #{record.plugin,jdbcType=CHAR},
      password_expired = #{record.passwordExpired,jdbcType=CHAR},
      password_last_changed = #{record.passwordLastChanged,jdbcType=TIMESTAMP},
      password_lifetime = #{record.passwordLifetime,jdbcType=SMALLINT},
      account_locked = #{record.accountLocked,jdbcType=CHAR},
      ssl_cipher = #{record.sslCipher,jdbcType=LONGVARBINARY},
      x509_issuer = #{record.x509Issuer,jdbcType=LONGVARBINARY},
      x509_subject = #{record.x509Subject,jdbcType=LONGVARBINARY},
      authentication_string = #{record.authenticationString,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set Host = #{record.host,jdbcType=CHAR},
      User = #{record.user,jdbcType=CHAR},
      Select_priv = #{record.selectPriv,jdbcType=CHAR},
      Insert_priv = #{record.insertPriv,jdbcType=CHAR},
      Update_priv = #{record.updatePriv,jdbcType=CHAR},
      Delete_priv = #{record.deletePriv,jdbcType=CHAR},
      Create_priv = #{record.createPriv,jdbcType=CHAR},
      Drop_priv = #{record.dropPriv,jdbcType=CHAR},
      Reload_priv = #{record.reloadPriv,jdbcType=CHAR},
      Shutdown_priv = #{record.shutdownPriv,jdbcType=CHAR},
      Process_priv = #{record.processPriv,jdbcType=CHAR},
      File_priv = #{record.filePriv,jdbcType=CHAR},
      Grant_priv = #{record.grantPriv,jdbcType=CHAR},
      References_priv = #{record.referencesPriv,jdbcType=CHAR},
      Index_priv = #{record.indexPriv,jdbcType=CHAR},
      Alter_priv = #{record.alterPriv,jdbcType=CHAR},
      Show_db_priv = #{record.showDbPriv,jdbcType=CHAR},
      Super_priv = #{record.superPriv,jdbcType=CHAR},
      Create_tmp_table_priv = #{record.createTmpTablePriv,jdbcType=CHAR},
      Lock_tables_priv = #{record.lockTablesPriv,jdbcType=CHAR},
      Execute_priv = #{record.executePriv,jdbcType=CHAR},
      Repl_slave_priv = #{record.replSlavePriv,jdbcType=CHAR},
      Repl_client_priv = #{record.replClientPriv,jdbcType=CHAR},
      Create_view_priv = #{record.createViewPriv,jdbcType=CHAR},
      Show_view_priv = #{record.showViewPriv,jdbcType=CHAR},
      Create_routine_priv = #{record.createRoutinePriv,jdbcType=CHAR},
      Alter_routine_priv = #{record.alterRoutinePriv,jdbcType=CHAR},
      Create_user_priv = #{record.createUserPriv,jdbcType=CHAR},
      Event_priv = #{record.eventPriv,jdbcType=CHAR},
      Trigger_priv = #{record.triggerPriv,jdbcType=CHAR},
      Create_tablespace_priv = #{record.createTablespacePriv,jdbcType=CHAR},
      ssl_type = #{record.sslType,jdbcType=CHAR},
      max_questions = #{record.maxQuestions,jdbcType=INTEGER},
      max_updates = #{record.maxUpdates,jdbcType=INTEGER},
      max_connections = #{record.maxConnections,jdbcType=INTEGER},
      max_user_connections = #{record.maxUserConnections,jdbcType=INTEGER},
      plugin = #{record.plugin,jdbcType=CHAR},
      password_expired = #{record.passwordExpired,jdbcType=CHAR},
      password_last_changed = #{record.passwordLastChanged,jdbcType=TIMESTAMP},
      password_lifetime = #{record.passwordLifetime,jdbcType=SMALLINT},
      account_locked = #{record.accountLocked,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="me.liluyang.mybatis.generator.User">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="name" jdbcType="VARCHAR" property="name" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, age, name
  </sql>
  <select id="selectByExample" parameterType="me.liluyang.mybatis.generator.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="me.liluyang.mybatis.generator.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="me.liluyang.mybatis.generator.User">
    insert into user (id, age, name
      )
    values (#{id,jdbcType=INTEGER}, #{age,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="me.liluyang.mybatis.generator.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="name != null">
        name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="me.liluyang.mybatis.generator.UserExample" resultType="java.lang.Integer">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=INTEGER},
      age = #{record.age,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="me.liluyang.mybatis.generator.User">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="enabled" jdbcType="BIT" property="enabled" />
    <result column="last_password_reset_at" jdbcType="TIMESTAMP" property="lastPasswordResetAt" />
    <result column="mphone" jdbcType="VARCHAR" property="mphone" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="update_at" jdbcType="TIMESTAMP" property="updateAt" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="wechat_id" jdbcType="VARCHAR" property="wechatId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_at, email, enabled, last_password_reset_at, mphone, password, update_at, 
    username, wechat_id
  </sql>
  <select id="selectByExample" parameterType="me.liluyang.mybatis.generator.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="me.liluyang.mybatis.generator.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="me.liluyang.mybatis.generator.User">
    insert into user (id, create_at, email, 
      enabled, last_password_reset_at, mphone, 
      password, update_at, username, 
      wechat_id)
    values (#{id,jdbcType=VARCHAR}, #{createAt,jdbcType=TIMESTAMP}, #{email,jdbcType=VARCHAR}, 
      #{enabled,jdbcType=BIT}, #{lastPasswordResetAt,jdbcType=TIMESTAMP}, #{mphone,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{updateAt,jdbcType=TIMESTAMP}, #{username,jdbcType=VARCHAR}, 
      #{wechatId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="me.liluyang.mybatis.generator.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="lastPasswordResetAt != null">
        last_password_reset_at,
      </if>
      <if test="mphone != null">
        mphone,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="wechatId != null">
        wechat_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=BIT},
      </if>
      <if test="lastPasswordResetAt != null">
        #{lastPasswordResetAt,jdbcType=TIMESTAMP},
      </if>
      <if test="mphone != null">
        #{mphone,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="wechatId != null">
        #{wechatId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="me.liluyang.mybatis.generator.UserExample" resultType="java.lang.Integer">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.createAt != null">
        create_at = #{record.createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.enabled != null">
        enabled = #{record.enabled,jdbcType=BIT},
      </if>
      <if test="record.lastPasswordResetAt != null">
        last_password_reset_at = #{record.lastPasswordResetAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mphone != null">
        mphone = #{record.mphone,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.updateAt != null">
        update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.wechatId != null">
        wechat_id = #{record.wechatId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=VARCHAR},
      create_at = #{record.createAt,jdbcType=TIMESTAMP},
      email = #{record.email,jdbcType=VARCHAR},
      enabled = #{record.enabled,jdbcType=BIT},
      last_password_reset_at = #{record.lastPasswordResetAt,jdbcType=TIMESTAMP},
      mphone = #{record.mphone,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      username = #{record.username,jdbcType=VARCHAR},
      wechat_id = #{record.wechatId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>